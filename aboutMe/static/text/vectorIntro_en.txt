<b>Overview:</b>
A Python program designed to compute the resultant magnitude and angle of multiple vectors, simplifying vector operations in physics problems. The initial version supported only two vectors, while later upgrades expanded to handle any number of vectors.

<b>Features:</b>
<b>&#8226; Core Computational Functions</b>
	<b>&#9702; Vector Addition:</b> Calculates the resultant vector’s magnitude and direction from multiple input vectors.
	<b>&#9702; Polar to Cartesian Conversion:</b> Converts input angles and magnitudes into X/Y components.
	<b>&#9702; Angle Adjustment:</b> Automatically normalizes angles to the range 0°–360°.
<b>&#8226; Version Iterations</b>
	<b>&#9702; vector.2:</b> Supports addition of only two vectors.
	<b>&#9702; vector.3 (Current):</b> Supports any number of vectors for continuous summation.
<b>&#8226; User Interaction</b>
	<b>&#9702; Dynamic Input:</b> Users can enter multiple vectors with their respective magnitudes and angles.
	<b>&#9702; Formatted Output:</b> Results are displayed with three decimal places for better readability.

<b>Tech Stack:</b>
<b>&#8226; Python:</b> Core computation logic
<b>&#8226; math Library:</b> Trigonometric functions (sin, cos, atan) and radian conversions
<b>&#8226; Loop Structures:</b> Supports multi-vector continuous calculations

<b>Code Logic Explanation:</b>
<b>&#8226; Input Phase</b>
	User inputs the number of vectors (≥2).
	User enters the magnitude and angle for each vector.
<b>&#8226; Computation Phase</b>
	&#9702; Polar to Cartesian Conversion:
		X = r*cos(θ); Y = r*sin(θ)
	&#9702; Component Summation:
		X_total = X_1 + X_2 + ...
		Y_total = Y_1 + Y_2 + ...
	&#9702; Resultant Vector Calculation:
		Magnitude = sqrt(X_total^2 + Y_total^2)
		Angle Adjustment: Corrects negative angles and quadrant issues.
<b>&#8226; Output Phase</b>
	Prints the resultant vector’s magnitude and angle.

<b>Example Usage:</b>
<b>&#8226; python:</b>
	Enter the total number of vectors (x ≥ 2): 3  
	Enter magnitude of vector 1: 5  
	Enter angle of vector 1: 30  
	Enter magnitude of vector 2: 10  
	Enter angle of vector 2: 60  
	Enter magnitude of vector 3: 8  
	Enter angle of vector 3: 120  
<b>&#8226; Output:</b>
	Resultant Magnitude: 12.345  
	Resultant Angle: 75.678°  

<b>Future Improvements:</b>
<b>&#8226; Graphical User Interface (GUI):</b> Implement using tkinter or PyQt for interactive input/output.
<b>&#8226; Real-Time Computation:</b> Dynamically visualize vector composition using matplotlib.
<b>&#8226; Error Handling:</b> Improve input validation (prevent non-numeric inputs).
<b>&#8226; Feature Expansion:</b> Support vector subtraction, dot product, and cross product calculations.

<b>Project Significance:</b>
<b>&#8226; Learning Value:</b> Practical application of trigonometric functions, loops, and user input handling.
<b>&#8226; Practical Use:</b> Reduces manual vector calculations in physics problems, improving efficiency.
<b>&#8226; Open-Source Contribution:</b> The project is hosted on GitHub, welcoming improvements and optimizations!

<b>Note:</b> The current version is a command-line tool, ideal for students and physics enthusiasts. Future plans include optimizing code structure and enhancing user interaction.